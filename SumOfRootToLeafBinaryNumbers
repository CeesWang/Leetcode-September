/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int sumRootToLeaf(TreeNode root) {
        int[] sum = {0};
        iterateTree(root, sum, 0);
        return sum[0];
    }
    
    public void iterateTree(TreeNode node, int[] sum, int currTotal) {
        if (node != null) {
            if (node.left == null && node.right == null) {
                sum[0] += (currTotal * 2 + node.val); 
            }
            int total = currTotal * 2 + node.val;
            iterateTree(node.left, sum, total);
            iterateTree(node.right, sum, total);
        }
    }
}
