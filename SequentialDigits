class Solution {
    public List<Integer> sequentialDigits(int low, int high) {
        List<Integer> list = new ArrayList<>();
        int digitsLen = Integer.toString(low).length();
        int num = generateFirstSequentialNumber(digitsLen); 
        int increment = generateIncrement(digitsLen);
        while (num < low) {
            num+= increment;
            if (num % 10 == 0) {
                digitsLen++;   
                num = generateFirstSequentialNumber(digitsLen);
                increment = generateIncrement(digitsLen);
            }
        }
        while (num <= high) {
            list.add(num);
            if (num % 10 == 9) {
                digitsLen++;
                num = generateFirstSequentialNumber(digitsLen);
                increment = generateIncrement(digitsLen);
            }
            else {
                num += increment;
            }
        }
        return list;
    }
    
    public int generateIncrement (int len) {
        int n = 0;
        int idx = 0;
        while (idx < len) {
            n*= 10;
            n += 1;
            idx++;
        }
        return n;
    }
    public int generateFirstSequentialNumber(int len) {
        int n = 1;
        int idx= 1;
        int digit = 2;
        while (idx < len) {
            n *= 10;
            n += digit;
            digit++;
            idx++;
        }
        return n;
    }
}
