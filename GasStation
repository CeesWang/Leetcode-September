class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        int len = gas.length;
        int[] diffArr = new int [len];
        int gasSum = 0;
        int costSum = 0;
        for (int i = 0; i < len; ++i) {
            gasSum += gas[i];
            costSum += cost[i];
            diffArr[i] = gas[i] - cost[i];
        }
        if (gasSum - costSum < 0) {
            return -1;
        }
        
        for (int i = 0; i < len; ++i) {
            int idx = i + 1;
            int tank = diffArr[i];
            if (tank >= 0) {
                while (tank >= 0 && (idx % len) != i) {
                    tank += diffArr[idx % len];
                    idx++;
                }
                if (tank >= 0 && idx % len == i) {
                    return i;
                }
            }
        }
        return -1;
    }
}

// gas  = [1,2,3,4,5]
// cost = [3,4,5,1,2]
// diff = [-2,-2,2,3,3]

// gas = [3, 2, 1]
// cost = [2, 3, 1]
// diff = [1, -1 0]
