class Solution {
    public List<Integer> majorityElement(int[] nums) {
        List<Integer> list = new ArrayList<>();
        if (nums.length == 0){
            return list;
        }
        int majority = nums.length / 3;
        int majorEl1 = nums[0];
        int majorEl2 = nums[0];
        int count1 = 1;
        int count2 = 0;
        for (int i = 1; i < nums.length; ++i) {
            if (majorEl1 == nums[i]) {
                count1++;
            }
            else if (majorEl2 == nums[i] ) {
                count2++;
            }
            else if (count1 == 0) {
                majorEl1 = nums[i];
                count1 = 1;
            }
            else if (count2 == 0) {
                majorEl2 = nums[i];
                count2 = 1;
            }
            else {
                count1--;
                count2--;
            }
        }
        count1 = (count1 > 0) ? 0 : -1;
        count2 = (count2 > 0) ? 0 : -1;

        for (int i = 0; i < nums.length; ++i) {
            if (count1 != -1 && nums[i] == majorEl1) {
                count1++;
            }
            if (count2 != -1 && nums[i] == majorEl2) {
                count2++;
            }
        }
        if (count1 > majority) {
            list.add(majorEl1);
        }
        if (count2 > majority) {
            list.add(majorEl2);
        }
        
        return list; 
    }
}


//
